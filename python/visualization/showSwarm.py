import cv2
import numpy as np
import math
import scipy.io

# This code need the "DATACELL" format data which generated by matlab code "loadTrackingdata.m"
# Please note the angle unit！！！！！！！！！！！！！！！！！！
# if degree 
		# in "__getOriPoint" function
		# s = math.sin(math.radians(angle))
		# c = math.cos(math.radians(angle))

# if radians
		# in "__getOriPoint" function
		# s = math.sin(angle)
		# c = math.cos(angle)

class  Swarm(object):
	"""docstring for  """
	def __init__(self, data):
		''' the data is a matlab cell matrix(1 row x number of fish column)'''
		self.data = data
		self.creatScreen(400,400)
		self.setTank(88,88)

	def creatScreen(self, heigth,width):
		self.screen = np.zeros((heigth,width,3), np.uint8)
		self.heigth = heigth
		self.width = width
		self.screen[:,:] = (255,255,255)

	def drawFrame(self, frameId):
		frame = self.data[0][frameId-1]
		for i in range(len(frame[0,:])):
			id = frame[:,i][0]
			id = int(id)
			(px,py) = self.__cm2pixel(frame[:,i][1],frame[:,i][2])
			angle = frame[:,i][3]
			(oriPx,oriPy) = self.__getOriPoint(px,py,angle)
			cv2.circle(self.screen,(px,self.heigth-py),1,150)
			cv2.line(self.screen,(px,self.heigth-py),(oriPx,self.heigth-oriPy),(0,0,0))
			cv2.putText(self.screen,str(id),(px,self.heigth-py),cv2.FONT_HERSHEY_SIMPLEX,0.4,(0,0,0))
			print (px,py)
			print (oriPx,oriPy)

	def __getOriPoint(self, x, y, angle):
		x_shift = x + 10
		y_shift = y 

		s = math.sin(math.radians(angle))
		c = math.cos(math.radians(angle))

		x_shift = x_shift - x
		y_shift = y_shift - y

		x_new = x_shift * c - y_shift * s
		y_new = x_shift * s + y_shift * c

		x_shift = x_new + x;
		y_shift = y_new + y;

		return (int(x_shift),int(y_shift))

	def __cm2pixel(self,x,y):
		px = self.width * x / self.tank_width
		py = self.heigth * y / self.tank_hight
		return (int(px),int(py))

	def show(self):
		cv2.imshow('swarm',self.screen)

	def getScreen(self):
		return self.screen

	def setTank(self,tank_width,tank_hight):
		""" unit cm """
		self.tank_hight = tank_hight
		self.tank_width = tank_width



# test code
mat = scipy.io.loadmat('../data/swarm/cDataWithoutRobo.mat')
data = mat.get('cDATACELL')

swarm = Swarm(data)
swarm.drawFrame(int(1))
swarm.show()
cv2.waitKey(0)
